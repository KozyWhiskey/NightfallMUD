// NightfallMUD/server/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NEW: Account Model - Handles login and user identity
model Account {
  id        String      @id @default(cuid())
  username  String      @unique
  password  String

  // Relation: An account can have multiple characters
  characters Character[]
}

// NEW: Character Model - This is the player's in-game avatar with all stats
model Character {
  id            String @id @default(cuid())
  name          String @unique // Character's name

  // Relation to Account
  accountId     String
  account       Account @relation(fields: [accountId], references: [id])

  // Stats
  level         Int    @default(1)
  experience    Int    @default(0)
  gold          Int    @default(10)
  strength      Int    @default(5)
  dexterity     Int    @default(5)
  constitution  Int    @default(5)
  intelligence  Int    @default(5)
  wisdom        Int    @default(5)
  charisma      Int    @default(5)
  hp            Int    @default(10)
  maxHp         Int    @default(10)
  mana          Int    @default(5)
  maxMana       Int    @default(5)

  // Game State
  currentRoomId String
  room          Room    @relation("RoomToCharacters", fields: [currentRoomId], references: [id])
  inventory     Item[]  @relation("CharacterToItems")
}

model Room {
  id          String   @id
  name        String
  description String
  exits       Json

  // Relation to Characters
  characters  Character[] @relation("RoomToCharacters")
  items       Item[]      @relation("RoomToItems")
}

model Item {
  id          String  @id @default(cuid())
  name        String
  description String

  // An item can be in a room OR in a character's inventory
  roomId      String?
  room        Room?   @relation("RoomToItems", fields: [roomId], references: [id])

  characterId String?
  character   Character? @relation("CharacterToItems", fields: [characterId], references: [id])
}