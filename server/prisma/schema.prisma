// server/src/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- ALL ENUMS DEFINED AT THE TOP ---
enum Hostility { 
  FRIENDLY 
  NEUTRAL 
  HOSTILE
  }
enum Class { 
  VANGUARD
  SHADOWBLADE 
  AETHER_WEAVER
  DAWNKEEPER
  TECHNOMANCER
  GLOOM_WARDEN 
  }
enum EquipSlot { 
  NONE
  HEAD
  CHEST
  LEGS
  FEET
  HANDS
  WEAPON_MAIN
  WEAPON_OFF
  RING
  AMULET 
  }

model Account {
  id         String      @id @default(cuid())
  username   String      @unique
  password   String
  characters Character[]
}

model Character {
  id                    String @id @default(cuid())
  name                  String @unique
  class                 Class
  accountId             String
  account               Account @relation(fields: [accountId], references: [id])
  level                 Int
  experience            Int
  experienceToNextLevel Int
  unspentStatPoints     Int
  gold                  Int
  strength              Int
  dexterity             Int
  constitution          Int
  intelligence          Int
  wisdom                Int
  charisma              Int
  resolve               Int
  hp                    Int
  maxHp                 Int
  mana                  Int
  maxMana               Int
  defense               Int
  currentRoomId         String
  room                  Room    @relation("RoomToCharacters", fields: [currentRoomId], references: [id])
  inventory             Item[]  @relation("CharacterToItems")
}

model Room {
  id          String      @id
  name        String
  description String
  exits       Json
  x           Int         @default(0)
  y           Int         @default(0)
  z           Int         @default(0) // For different floors/levels
  characters  Character[] @relation("RoomToCharacters")
  items       Item[]      @relation("RoomToItems")
  mobs        Mob[]       @relation("RoomToMobs")
}

model ItemTemplate {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String
  weight      Float
  slot        EquipSlot
  attributes  Json       @default("{}")
  instances   Item[]
}

model Item {
  id            String  @id @default(cuid())
  itemTemplateId  Int
  template        ItemTemplate @relation(fields: [itemTemplateId], references: [id])
  
  roomId        String?
  room          Room?   @relation("RoomToItems", fields: [roomId], references: [id])
  
  characterId   String?
  character     Character? @relation("CharacterToItems", fields: [characterId], references: [id])
  
  equipped      Boolean    @default(false)
}

model Mob {
  id                String    @id @default(cuid())
  name              String
  description       String
  hostility         Hostility @default(NEUTRAL)
  canDropGold       Boolean   @default(true)
  lootTable         Json      @default("[]")
  keywords          String[]
  level             Int
  hp                Int
  maxHp             Int
  strength          Int
  defense           Int
  experienceAward   Int
  roomId            String
  room              Room      @relation("RoomToMobs", fields: [roomId], references: [id])
}