// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Player Model: Represents a player character
model Player {
  id            String  @id @default(cuid())
  name          String  @unique // Player names should be unique
  
  // Relation to Room: A player is in one room
  currentRoomId String
  room          Room    @relation("RoomToPlayers", fields: [currentRoomId], references: [id])

  // Relation to Items: A player can have many items
  inventory     Item[]  @relation("PlayerToItems")
}

// Room Model: Represents a location in the game world
model Room {
  id          String   @id // We will use custom IDs like 'room-1'
  name        String
  description String
  exits       Json     // Storing exits as a JSON object for simplicity

  // Relation to Players: A room can have many players
  players     Player[] @relation("RoomToPlayers")

  // Relation to Items: A room can have many items on the floor
  items       Item[]   @relation("RoomToItems")
}

// Item Model: Represents an item that can be in a room or a player's inventory
model Item {
  id          String  @id @default(cuid())
  name        String
  description String

  // An item can be in a room OR in a player's inventory, but not both.
  // The '?' makes the relation optional.
  roomId      String?
  room        Room?   @relation("RoomToItems", fields: [roomId], references: [id])
  
  playerId    String?
  player      Player? @relation("PlayerToItems", fields: [playerId], references: [id])
}